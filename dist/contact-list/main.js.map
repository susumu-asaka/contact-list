{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/actions.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact-detail/contact-detail.component.css","webpack:///./src/app/contact-detail/contact-detail.component.html","webpack:///./src/app/contact-detail/contact-detail.component.ts","webpack:///./src/app/contact.service.ts","webpack:///./src/app/contacts/contacts.component.css","webpack:///./src/app/contacts/contacts.component.html","webpack:///./src/app/contacts/contacts.component.ts","webpack:///./src/app/reducer.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import * as NgrxStore from '@ngrx/store';\nimport { State } from './state';\nimport { Contact } from 'server/contact';\n\nexport interface Action extends NgrxStore.Action {\n  readonly type: string;\n  reducer(state: State): State;\n}\n\nexport class StartUpdate implements Action {\n  readonly type = 'StartUpdate';\n\n  reducer(state: State): State {\n    return { ...state, isUpdating: true, error: null };\n  }\n}\n\nexport class LoadContacts implements Action {\n  readonly type = 'LoadContacts';\n\n  constructor(private contacts: Contact[]) { }\n\n  reducer(state: State): State {\n    return { ...state, contacts: this.contacts };\n  }\n}\n\nexport class DelContact implements Action {\n  readonly type = 'DelContact';\n\n  constructor(private index: number) { }\n\n  reducer(state: State): State {\n    const olds = state.contacts;\n    const i = this.index;\n    const contacts =\n      [...olds.slice(0, i), ...olds.slice(i + 1)];\n    return { ...state, contacts };\n  }\n}\n\nexport class UpdContact implements Action {\n  readonly type = 'UpdContact';\n\n  constructor(private index: number, private contact: Contact) { }\n\n  reducer(state: State): State {\n    const olds = state.contacts;\n    const i = this.index;\n    const contacts =\n      [...olds.slice(0, i), this.contact, ...olds.slice(i + 1)];\n    return { ...state, contacts };\n  }\n}\n\nexport class AddContact implements Action {\n  readonly type = 'AddContact';\n\n  constructor(private contact: Contact) { }\n\n  reducer(state: State): State {\n    const olds = state.contacts;\n    let i = olds.findIndex(contact =>\n      contact.name > this.contact.name);\n    if (i < 0) {\n      i = olds.length;\n    }\n    const contacts =\n      [...olds.slice(0, i), this.contact, ...olds.slice(i)];\n    return { ...state, contacts };\n  }\n}\n\nexport class SuccessUpdate implements Action {\n  readonly type = 'SuccessUpdate';\n\n  reducer(state: State): State {\n    return { ...state, isUpdating: false };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/contacts', pathMatch: 'full' },\n  { path: 'detail', component: ContactDetailComponent },\n  { path: 'detail/:id', component: ContactDetailComponent },\n  { path: 'contacts', component: ContactsComponent}\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<h1>{{title}}</h1>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'contact-list';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './reducer';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      ContactsComponent,\n      ContactDetailComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      AppRoutingModule,\n      ReactiveFormsModule,\n      NgbModule.forRoot(),\n      StoreModule.forRoot({ state: reducer })\n   ],\n   providers: [],\n   bootstrap: [\n      AppComponent,\n   ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2 *ngIf=\\\"contactId\\\">\\n    Editar Contato\\n  </h2>\\n  <h2 *ngIf=\\\"!contactId\\\">\\n    Criar Contato\\n  </h2>\\n  <form [formGroup]=\\\"contactForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>\\n        Nome\\n      </label>\\n      <input class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"nome\\\" required>\\n    </div>\\n    <div formArrayName=\\\"fields\\\" *ngFor=\\\"let field of contactFields.controls; let i=index\\\">\\n      <div class=\\\"form-row\\\" [formGroupName]=\\\"i\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input class=\\\"form-control\\\" formControlName=\\\"label\\\" placeholder=\\\"Tipo de informação\\\" required>\\n        </div>\\n        <div class=\\\"col-md-8\\\">\\n          <input class=\\\"form-control\\\" formControlName=\\\"value\\\" placeholder=\\\"Informação\\\">\\n        </div>\\n        <div class=\\\"col-md-1\\\">\\n          <button type=\\\"button\\\" class=\\\"btn danger\\\" (click)=\\\"delField(i)\\\" ngbTooltip=\\\"Remover\\\">\\n            <i class=\\\"fas fa-trash\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"col-md-11\\\"></div>\\n      <div class=\\\"col-md-1\\\">\\n        <button class=\\\"btn primary\\\" id=\\\"addFieldButton\\\" (click)=\\\"addField()\\\" ngbTooltip=\\\"Adicionar informação\\\">\\n          <i class=\\\"fas fa-plus-circle\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"footer\\\">\\n      <div class=\\\"float-right\\\">\\n        <button id=\\\"cancelButton\\\" class=\\\"btn btn-primary\\\" (click)=\\\"router.navigateByUrl('/contacts')\\\">\\n          CANCELAR\\n        </button>\\n        &emsp;\\n        <button id=\\\"saveButton\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\" [disabled]=\\\"!contactForm.valid || !contactForm.dirty\\\">\\n          SALVAR\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormArray, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Contact, Fields } from 'server/contact';\nimport { ContactService } from '../contact.service';\nimport { Store, select } from '@ngrx/store';\nimport { State } from '../state';\nimport { StartUpdate, UpdContact, SuccessUpdate, AddContact } from '../actions';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-contact-detail',\n  templateUrl: './contact-detail.component.html',\n  styleUrls: ['./contact-detail.component.css']\n})\nexport class ContactDetailComponent implements OnInit {\n  contactForm = this.fb.group({\n    name: ['', Validators.required],\n    fields: this.fb.array([])\n  });\n  contactId: string;\n  index: number;\n\n  constructor(\n    private fb: FormBuilder,\n    public router: Router,\n    private contactService: ContactService,\n    public route: ActivatedRoute,\n    private store: Store<State>\n  ) { }\n\n  ngOnInit() {\n    // This code should run once and for all,\n    // therefore just sample current state don't subscribe\n    this.store.pipe<State>(select('state'), take(1)).forEach(state => {\n      const id = this.contactId =\n        this.route.snapshot.paramMap.get('id');\n      const contacts = state.contacts;\n      if (!id || contacts.length === 0) {\n        return;\n      }\n      this.index = contacts.findIndex(c => c._id === id);\n      const contact = contacts[this.index];\n      this.contactForm.get('name').setValue(contact.name);\n      const fields = contact.fields;\n      for (const label of Object.keys(fields)) {\n        this.contactFields.push(this.fb.group({\n          label: [label, Validators.required],\n          value: [fields[label], Validators.required]\n        }));\n      }\n    });\n  }\n\n  get contactFields(): FormArray {\n    return this.contactForm.get('fields') as FormArray;\n  }\n\n  addField(): void {\n    this.contactFields.push(this.fb.group({\n      label: ['', Validators.required],\n      value: ['', Validators.required]\n    }));\n  }\n\n  delField(index: number): void {\n    this.contactFields.removeAt(index);\n  }\n\n  async save() {\n    this.store.dispatch(new StartUpdate());\n    const fieldsArray = this.contactFields.value;\n    let contact: Contact = {\n      name: this.contactForm.get('name').value,\n      fields: {}\n    };\n    for (let i = 0; i < fieldsArray.length; i++) {\n      contact.fields[fieldsArray[i].label] = fieldsArray[i].value;\n    }\n    const id = this.contactId;\n    if (id) {\n      contact._id = this.contactId;\n      contact = await this.contactService.updContact(contact);\n      this.store.dispatch(new UpdContact(this.index, contact));\n    } else {\n      contact = await this.contactService.addContact(contact);\n      this.store.dispatch(new AddContact(contact));\n    }\n    this.store.dispatch(new SuccessUpdate());\n    this.router.navigateByUrl('/contacts');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { UNAUTHORIZED } from 'http-status';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Contact } from 'server/contact';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactService {\n  private contactsUrl = '/api/contacts';\n\n  constructor(private http: HttpClient) {\n  }\n\n  /** GET contacts from the server */\n  getContacts(): Promise<Contact[]> {\n    return this.http.get<Contact[]>(this.contactsUrl)\n      .pipe(catchError(this.handleError('getContacts', [])))\n      .toPromise();\n  }\n\n  /** DELETE the contact from the server */\n  delContact(contact: Contact): Promise<void> {\n    return this.http.delete(`${this.contactsUrl}/${contact._id}`)\n      .pipe(catchError(this.handleError('delContact', null)))\n      .toPromise();\n  }\n\n  /** POST: add a new contact to the server */\n  addContact(contact: Contact): Promise<Contact> {\n    return this.http.post(this.contactsUrl, contact)\n      .pipe(catchError(this.handleError('createContact', null)))\n      .toPromise();\n  }\n\n  /** PUT: update the contact on the server */\n  updContact(contact: Contact): Promise<Contact> {\n    return this.http.put(`${this.contactsUrl}/${contact._id}`, contact)\n      .pipe(catchError(this.handleError('updateContact', null)))\n      .toPromise();\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      if (error instanceof HttpErrorResponse) {\n        if (!navigator.onLine) {\n          alert('Sem conexão com Internet');\n        } else if (error.status === UNAUTHORIZED) {\n          alert('Você precisa registrar-se antes no site');\n        } else {\n          alert(`${operation} falhou.\n  mensagem: ${error.error.message}\n  situação: ${error.statusText}`);\n        }\n      } else {\n        alert(`erro: ${error}`);\n      }\n      console.error('erro:', error);\n      return of(result);\n    };\n  }\n}\n","module.exports = \"#addButton {\\n  font-size: 50px;\\n  color: #e91e63;\\n}\\n\"","module.exports = \"<h2>\\n  Contatos ({{contacts.length}})\\n</h2>\\n<h2 *ngIf=\\\"isUpdating && contacts.length === 0\\\">\\n  Carregando...\\n</h2>\\n<h2 *ngIf=\\\"!isUpdating && contacts.length === 0\\\">\\n  Sem contatos.\\n</h2>\\n<ul class=\\\"list-group\\\" [ngStyle]=\\\"{opacity: isUpdating? 0.5: 1}\\\">\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let contact of contacts; index as i\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\" (click)=\\\"router.navigateByUrl('/detail/' + contact._id)\\\">\\n        {{contact.name}}\\n      </div>\\n      <a class=\\\"col-md-2\\\" href=\\\"mailto:{{contact.fields['E-mail']}}\\\">\\n        {{contact.fields['E-mail']}}\\n      </a>\\n      <div class=\\\"col-md-3\\\" (click)=\\\"router.navigateByUrl('/detail/' + contact._id)\\\">\\n        {{contact.fields['Telefone']}}\\n      </div>\\n      <div class=\\\"col-md-3\\\" (click)=\\\"router.navigateByUrl('/detail/' + contact._id)\\\">\\n        {{getCargoEmpresa(contact)}}\\n      </div>\\n      <div class=\\\"col-md-1\\\">\\n        <button type=\\\"button\\\" class=\\\"btn danger\\\" (click)=\\\"delContact(i)\\\" ngbTooltip=\\\"Excluir\\\">\\n          <i class=\\\"fas fa-trash\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </li>\\n</ul>\\n<div class=\\\"footer\\\">\\n  <div class=\\\"float-right\\\">\\n    <button type=\\\"button\\\" class=\\\"btn\\\" id=\\\"addButton\\\" (click)=\\\"router.navigateByUrl('/detail')\\\" ngbTooltip=\\\"Criar novo contato\\\">\\n      <i class='fas fa-plus-circle'></i>\\n    </button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Contact } from 'server/contact';\nimport { ContactService } from '../contact.service';\nimport { Router } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { State } from '../state';\nimport { StartUpdate, LoadContacts, SuccessUpdate, DelContact } from '../actions';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n  isUpdating: boolean;\n  contacts: Contact[];\n\n  constructor(\n    private contactService: ContactService,\n    public router: Router,\n    private store: Store<State>\n  ) {\n    store.pipe(select('state')).forEach(state => {\n      this.isUpdating = state.isUpdating;\n      this.contacts = state.contacts;\n    });\n  }\n\n  ngOnInit() {\n    this.getContacts();\n  }\n\n  private async getContacts() {\n    this.store.dispatch(new StartUpdate());\n    const contacts = await this.contactService.getContacts();\n    this.store.dispatch(new LoadContacts(contacts));\n    this.store.dispatch(new SuccessUpdate());\n  }\n\n  async delContact(index: number) {\n    this.store.dispatch(new StartUpdate());\n    await this.contactService.delContact(this.contacts[index]);\n    this.store.dispatch(new DelContact(index));\n    this.store.dispatch(new SuccessUpdate());\n  }\n\n  getCargoEmpresa(contact: Contact): string {\n    const fields = contact.fields;\n    const cargo = fields['Cargo'];\n    const empresa = fields['Empresa'];\n    if (cargo && empresa) {\n      return cargo + ', ' + empresa;\n    }\n    if (cargo) {\n      return cargo;\n    }\n    if (empresa) {\n      return empresa;\n    }\n    return '';\n  }\n}\n","import { State } from './state';\nimport { Action } from './actions';\n\nexport function reducer(\n  state: State = { isUpdating: true, error: null, contacts: [] },\n  action: Action\n): State {\n  if (action.reducer) {\n    return action.reducer(state);\n  }\n  return state;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}