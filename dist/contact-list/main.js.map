{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact-details/contact-details.component.css","webpack:///./src/app/contact-details/contact-details.component.html","webpack:///./src/app/contact-details/contact-details.component.ts","webpack:///./src/app/contact.service.ts","webpack:///./src/app/contacts/contacts.component.css","webpack:///./src/app/contacts/contacts.component.html","webpack:///./src/app/contacts/contacts.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { ContactDetailsComponent } from './contact-details/contact-details.component';\n\nconst routes: Routes = [\n  { path: '', component: ContactsComponent },\n  { path: 'contactDetails/:id', component: ContactDetailsComponent },\n  { path: 'contactDetails', component: ContactDetailsComponent },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-contacts></app-contacts>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'contact-list';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { ContactDetailsComponent } from './contact-details/contact-details.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      ContactsComponent,\n      ContactDetailsComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      AppRoutingModule,\n      NgbModule.forRoot()\n   ],\n   providers: [],\n   bootstrap: [\n      AppComponent,\n   ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  contact-details works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-details',\n  templateUrl: './contact-details.component.html',\n  styleUrls: ['./contact-details.component.css']\n})\nexport class ContactDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { UNAUTHORIZED } from 'http-status';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Contact } from 'server/contact';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactService {\n  constructor(private http: HttpClient) {\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      if (error instanceof HttpErrorResponse) {\n        if (!navigator.onLine) {\n          alert('Sem conexão com Internet');\n        } else if (error.status === UNAUTHORIZED) {\n          alert('Você precisa registrar-se antes no site');\n        } else {\n          alert(`${operation} falhou.\n  mensagem: ${error.error.message}\n  situação: ${error.statusText}`);\n        }\n      } else {\n        alert(`erro: ${error}`);\n      }\n      console.error('erro:', error);\n      return of(result);\n    };\n  }\n\n  getContacts(): Promise<Contact[]> {\n    return this.http.get<Contact[]>('/api/contacts')\n      .pipe(catchError(this.handleError('getContacts', null)))\n      .toPromise();\n  }\n\n  deleteContact(contact: Contact): Promise<void> {\n    return this.http.delete('/api/contacts/' + contact._id)\n      .pipe(catchError(this.handleError('deleteContact', null)))\n      .toPromise();\n  }\n}\n","module.exports = \"#addButton {\\n  width: 70px;\\n  height: 70px;\\n  padding: 10px 10px;\\n  font-size: 50px;\\n  color: #e91e63;\\n  bottom: 10px;\\n  left: 10px;\\n  position: fixed;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h2>\\n      Contatos ({{contacts.length}})\\n    </h2>\\n  </div>\\n</div>\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let contact of contacts\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        {{contact.name}}\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        {{contact.fields['email']}}\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        {{contact.fields['telefone']}}\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        {{getCargoEmpresa(contact)}}\\n      </div>\\n      <div class=\\\"col-md-1\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteContact(contact)\\\" ngbTooltip=\\\"Remover contato\\\">\\n          <i class=\\\"fas fa-trash\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </li>\\n</ul>\\n<button type=\\\"button\\\" class=\\\"btn\\\" id=\\\"addButton\\\" (click)=\\\"router.navigateByUrl('/contactDetails')\\\" ngbTooltip=\\\"Criar contato\\\">\\n  <i class='fas fa-plus-circle'></i>\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { Contact } from 'server/contact';\nimport { ContactService } from '../contact.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n  contacts: Contact[] = [];\n\n  constructor(\n    private contactService: ContactService,\n    public router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getContacts();\n  }\n\n  async getContacts() {\n    this.contacts = await this.contactService.getContacts();\n  }\n\n  async deleteContact(contact) {\n    this.contactService.deleteContact(contact);\n  }\n\n  getCargoEmpresa(contact: Contact): string {\n    const fields = contact.fields;\n    const cargo = fields['cargo'];\n    const empresa = fields['empresa'];\n    if (cargo && empresa) {\n      return cargo + ', ' + empresa;\n    }\n    if (cargo) {\n      return cargo;\n    }\n    if (empresa) {\n      return empresa;\n    }\n    return '';\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}